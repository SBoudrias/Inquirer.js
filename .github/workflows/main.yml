name: CI

on:
  push:
    branches: ['main']
  pull_request:
    types: [opened, synchronize]

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

jobs:
  Compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: ${{ runner.os }}-turbo-
      - run: corepack enable
      - uses: actions/setup-node@v6
        with:
          node-version: latest
          cache: 'yarn'
      - run: yarn install --immutable --immutable-cache
      - name: Typescript
        run: yarn tsc

  Linting:
    runs-on: ubuntu-latest
    needs: Compile
    steps:
      - uses: actions/checkout@v5
      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: ${{ runner.os }}-turbo-
      - run: corepack enable
      - uses: actions/setup-node@v6
        with:
          node-version: latest
          cache: 'yarn'
      - run: yarn install --immutable --immutable-cache
      - run: yarn tsc
      - run: yarn oxlint .
      - run: yarn prettier --check .
      - run: yarn eslint .
      - name: Validate package setup
        run: |
          yarn setup
          yarn nano-staged
          git diff --exit-code -- . :^.yarn

  Unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [18, 20, 22]
    steps:
      - uses: actions/checkout@v5
      - run: corepack enable
      - uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install --immutable --immutable-cache
      - run: yarn vitest --run --coverage
      - uses: codecov/codecov-action@v5

  Integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: Compile
    steps:
      - uses: actions/checkout@v5
      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: ${{ runner.os }}-turbo-
      - run: corepack enable
      - uses: actions/setup-node@v6
        with:
          node-version: latest
          cache: 'yarn'
      - run: yarn install --immutable --immutable-cache
      - name: Integration tests
        run: yarn turbo test

  e2e:
    name: End to End build tests
    runs-on: ubuntu-latest
    needs: Compile
    env:
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
    steps:
      - uses: actions/checkout@v5
      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: ${{ runner.os }}-turbo-
      - run: corepack enable
      - uses: actions/setup-node@v6
        with:
          node-version: latest
          cache: 'yarn'
      - run: yarn install --immutable --immutable-cache
      - run: yarn tsc
      - run: yarn workspaces focus --all --production
      - name: Pack the monorepo modules
        run: |
          mkdir -p /tmp/artifacts
          yarn workspace @inquirer/core pack --out /tmp/artifacts/inquirer-core.tgz
          yarn workspace @inquirer/prompts pack --out /tmp/artifacts/inquirer-prompts.tgz
          yarn workspace @inquirer/figures pack --out /tmp/artifacts/inquirer-figures.tgz
          yarn workspace @inquirer/type pack --out /tmp/artifacts/inquirer-type.tgz
          yarn workspace @inquirer/ansi pack --out /tmp/artifacts/inquirer-ansi.tgz
          yarn workspace @inquirer/checkbox pack --out /tmp/artifacts/inquirer-checkbox.tgz
          yarn workspace @inquirer/confirm pack --out /tmp/artifacts/inquirer-confirm.tgz
          yarn workspace @inquirer/editor pack --out /tmp/artifacts/inquirer-editor.tgz
          yarn workspace @inquirer/external-editor pack --out /tmp/artifacts/inquirer-external-editor.tgz
          yarn workspace @inquirer/expand pack --out /tmp/artifacts/inquirer-expand.tgz
          yarn workspace @inquirer/input pack --out /tmp/artifacts/inquirer-input.tgz
          yarn workspace @inquirer/number pack --out /tmp/artifacts/inquirer-number.tgz
          yarn workspace @inquirer/password pack --out /tmp/artifacts/inquirer-password.tgz
          yarn workspace @inquirer/rawlist pack --out /tmp/artifacts/inquirer-rawlist.tgz
          yarn workspace @inquirer/search pack --out /tmp/artifacts/inquirer-search.tgz
          yarn workspace @inquirer/select pack --out /tmp/artifacts/inquirer-select.tgz
          yarn workspace @repo/tsconfig pack --out /tmp/artifacts/tsconfig.tgz
      - name: Extract @inquirer/demo to an isolated project & build
        run: |
          cur_dir=$(pwd)
          temp_dir=$(mktemp -d)
          cp -r packages/demo $temp_dir
          cp .yarnrc.yml $temp_dir/demo
          cd $temp_dir/demo
          # Modify package.json to use local packages and add resolutions
          node -e "
          const fs = require('fs');
          const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
          pkg.dependencies['@inquirer/core'] = 'file:/tmp/artifacts/inquirer-core.tgz';
          pkg.dependencies['@inquirer/prompts'] = 'file:/tmp/artifacts/inquirer-prompts.tgz';
          pkg.dependencies['@inquirer/figures'] = 'file:/tmp/artifacts/inquirer-figures.tgz';
          pkg.devDependencies['@repo/tsconfig'] = 'file:/tmp/artifacts/tsconfig.tgz';
          pkg.resolutions = {
            '@inquirer/ansi': 'file:/tmp/artifacts/inquirer-ansi.tgz',
            '@inquirer/type': 'file:/tmp/artifacts/inquirer-type.tgz',
            '@inquirer/checkbox': 'file:/tmp/artifacts/inquirer-checkbox.tgz',
            '@inquirer/confirm': 'file:/tmp/artifacts/inquirer-confirm.tgz',
            '@inquirer/editor': 'file:/tmp/artifacts/inquirer-editor.tgz',
            '@inquirer/external-editor': 'file:/tmp/artifacts/inquirer-external-editor.tgz',
            '@inquirer/expand': 'file:/tmp/artifacts/inquirer-expand.tgz',
            '@inquirer/input': 'file:/tmp/artifacts/inquirer-input.tgz',
            '@inquirer/number': 'file:/tmp/artifacts/inquirer-number.tgz',
            '@inquirer/password': 'file:/tmp/artifacts/inquirer-password.tgz',
            '@inquirer/rawlist': 'file:/tmp/artifacts/inquirer-rawlist.tgz',
            '@inquirer/search': 'file:/tmp/artifacts/inquirer-search.tgz',
            '@inquirer/select': 'file:/tmp/artifacts/inquirer-select.tgz'
          };
          fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));
          "
          yarn set version stable
          yarn install
          yarn tsc

  Package:
    name: Are the types wrong?
    runs-on: ubuntu-latest
    needs: Compile
    steps:
      - uses: actions/checkout@v5
      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: ${{ runner.os }}-turbo-
      - run: corepack enable
      - uses: actions/setup-node@v6
        with:
          node-version: latest
          cache: 'yarn'
      - run: yarn install --immutable --immutable-cache
      - run: yarn turbo attw
